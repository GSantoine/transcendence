version: "3.8"

services:
  backend:
    container_name: backend
    image: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
     - ./.env
    depends_on:
      dev-db:
        condition: service_healthy
    networks:
      - app_network
    restart: on-failure
    volumes:
      - ./shared:/app/src/shared
      - ./backend/src:/app/src
      - ./backend/prisma:/app/prisma
    ports:
      - "3333:3333"

  dev-db:
    container_name: dev-db
    image: postgres:latest
    env_file:
     - .env
    ports:
      - "5432:5432"
    restart: always
    environment:
      - .env
    networks:
     - app_network
    volumes:
      - pg-data:/pg-data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5

  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - CHOKIDAR_USEPOLLIN=true
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_PORT=3000
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - app_network
    restart: on-failure
    volumes:
      - ./shared:/app/src/shared
      - ./frontend/src:/app/src

volumes:
  pg-data:

networks:
  app_network:
    driver: bridge